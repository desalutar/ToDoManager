import UIKit

protocol AddTaskVCDelegate: AnyObject {
    func didCreateToDo(todo: ToDoItem)
    func didUpdateToDo(todo: ToDoItem)
    func didDeleteToDo() // method for delete button
}

class AddTaskViewController: UIViewController, UITextViewDelegate {
    
    weak var delegate: AddTaskVCDelegate?
    
    // MARK: - Outlets
    @IBOutlet weak var textField: UITextField!
    @IBOutlet weak var textView: UITextView!
    
    
    
    enum controllerType {
        case create
        case edit
        case none
    }
    
    var type = controllerType.none
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        // –≤—ã–Ω–µ—Å–∏ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –∏ –≤—ã–∑–æ–≤–∏ –µ–≥–æ –æ—Ç—Å—é–¥–∞
        // –ø–æ–¥—É–º–∞–π –Ω–∞–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º. –ú–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –∫–∞–∫ –±—ã –≥–æ–≤–æ—Ä–∏—Ç—å —Å–≤–æ–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —á—Ç–æ –æ–Ω –¥–µ–ª–∞–µ—Ç
        // –≤–æ—Ç –∫–∞–∫ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ: `configure`
        textField.becomeFirstResponder()
        textField.delegate = self
        textView.delegate = self
    }
    
    
    func configure(with todos: ToDoItem) {
        textField.text = todos.title
        textView.text = todos.discription
    }
    
    // @IBAction private func myButton(_ sender: UIButton)
    // –º–µ–¥–æ–¥ —Å–¥–µ–ª–∞–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–º, –∏ —Ç—ã –∂–µ –∑–Ω–∞–µ—à—å –∫—Ç–æ —É —Ç–µ–±—è —Å–µ–Ω–¥–µ—Ä. –ó–∞—á–µ–º —Ç—É—Ç Any ?
    @IBAction func myButton(_ sender: Any) {
        // üí©üí©üí© –£–±—Ä–∞—Ç—å —Ñ–æ—Ä—Å –∞–Ω–≤—Ä–∞–ø. –ó–∞ —ç—Ç–æ –º–æ–≥—É—Ç —Å–ø—Ä–æ—Å–∏—Ç—å –∏ –±—É–¥—É—Ç –±–∏—Ç—å –ø–æ —Ä—É–∫–∞–º
        let todoFromTappedButton = ToDoItem(title: textField.text!, discription: textView.text!)
        
        switch type {
        case .create:
            delegate?.didCreateToDo(todo: todoFromTappedButton) // here we send data to the object who is subscribed to our delegate
            dismiss(animated: true)
        case .edit:
            delegate?.didUpdateToDo(todo: todoFromTappedButton)
            navigationController?.popViewController(animated: true)
        case .none:
            // –ê –ø–æ—á–µ–º—É Error ? —Ä–∞–∑–≤–µ —Ç—É—Ç –æ—à–∏–±–∫–∞ ?
            // —è —á—Ç–æ, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–º .none ?
            // –ò –¥–∞–∂–µ –µ—Å–ª–∏ –æ—à–∏–±–∫–∞, –∫–∞–∫ —Ç—ã –µ–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—à—å ? –ß—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–∏–¥–∏—Ç ?
            // ‚ùå –∏—Å–ø—Ä–∞–≤—å —Ç—É—Ç. –ü–æ–¥—É–º–∞–π –∫–∞–∫
            print("Error")
        }
    }
    
    // üí© —Å—Ç—Ä–æ–∫–∏ –æ–ø—è—Ç—å. –ü–æ —Ö–æ—Ä–æ—à–µ–º—É –≤–æ—Ç —Ç–∞–∫–∏–µ —Å—Ç—Ä–æ–∫–∏ –¥–æ–ª–∂–Ω—ã–π –±—ã—Ç—å –ª–æ–∫–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã
    // –ø–æ–∏—â–∏ –∏–Ω—Ñ—É –ø—Ä–æ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏—é –∏ –ø—Ä–∏–∫—Ä—É—Ç–∏ —Å—é–¥–∞.
    // –¢–∞–∫ –±–æ–ª—å—à–µ –¥–µ–ª–∞—Ç—å –Ω–µ–ª—å–∑—è!
    @IBAction func deleteButtonAction(_ sender: UIButton) { // add delete button
        let alert = UIAlertController(title: "–í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å ?",
                                      message: "–≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ",
                                      preferredStyle: .actionSheet)
        
        alert.addAction(UIAlertAction(title: "–ù–∞–∑–∞–¥", style: .cancel))
        alert.addAction(UIAlertAction(title: "–£–¥–∞–ª–∏—Ç—å", style: .destructive, handler: { (action) in
            self.dismiss(animated: true)
            self.delegate?.didDeleteToDo()
            self.navigationController?.popViewController(animated: true)
        }))
        present(alert, animated: true)
    }
}


// ‚ö†Ô∏è –£–¥–∞–ª–∏ —ç—Ç–æ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —ç—Ç–æ –º–µ—Ä—Ç–≤—ã–π –∫–æ–¥ 
extension AddTaskViewController: UITextFieldDelegate {
    
}
